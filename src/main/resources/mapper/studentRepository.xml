<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="raisetech.studentManagement.repository.StudentRepository">
  <!-- 受講生の全件検索　-->
  <select id="search" resultType="raisetech.studentManagement.date.Student">
    SELECT * FROM students
  </select>

  <!-- 受講生IDで受講生の検索　-->
  <select id="searchStudent" resultType="raisetech.studentManagement.date.Student">
    SELECT * FROM students WHERE id = #{id}
  </select>

  <!-- 条件を指定して受講生の検索　-->
  <select id="searchStudentsByCondition" resultType="raisetech.studentManagement.date.Student">
    SELECT * FROM students WHERE 1=1
    <if test="id != null and id != ''">
      AND id = #{id}
    </if>
    <if test="fullName != null and fullName != ''">
      AND full_name LIKE CONCAT('%', #{fullName}, '%')
    </if>
    <if test="furigana != null and furigana != ''">
      AND furigana LIKE CONCAT('%', #{furigana}, '%')
    </if>
    <if test="nickname != null and nickname != ''">
      AND nick_name LIKE CONCAT('%', #{nickname}, '%')
    </if>
    <if test="emailAddress != null and emailAddress != ''">
      AND email_address LIKE CONCAT('%', #{emailAddress}, '%')
    </if>
    <if test="area != null and area != ''">
      AND area LIKE CONCAT('%', #{area}, '%')
    </if>
    <if test="age != null and age != ''">
      AND age = #{age}
    </if>
    <if test="sex != null and sex != ''">
      AND sex = #{sex}
    </if>
  </select>

  <!-- 受講生コース情報の全件検索　-->
  <select id="searchStudentCourseList" resultType="raisetech.studentManagement.date.StudentCourse">
    SELECT * FROM students_courses
  </select>

  <!-- 一件の受講生IDで受講生コース情報の検索　-->
  <select id="searchStudentCourse" resultType="raisetech.studentManagement.date.StudentCourse">
    SELECT * FROM students_courses WHERE student_id =#{studentId}
  </select>

  <!-- 複数の受講生IDで受講生コース情報の検索　-->
  <select id="searchStudentCoursesByStudentIds" parameterType="list" resultType="raisetech.studentManagement.date.StudentCourse">
    SELECT * FROM students_courses WHERE student_id IN
    <foreach item="studentId" collection="list" open="(" separator="," close=")">
      #{studentId}
    </foreach>
  </select>

  <!-- 受講生の登録 -->
  <insert id="insertStudent" parameterType="raisetech.studentManagement.date.Student" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO students (full_name, furigana, nick_name, email_address, area, age, sex, remark,
    is_deleted)
    VALUES (#{fullName}, #{furigana}, #{nickname}, #{emailAddress}, #{area}, #{age}, #{sex},
    #{remark}, false)
  </insert>

  <!-- 受講生コース情報の登録 -->
  <insert id="insertStudentCourse" parameterType="raisetech.studentManagement.date.StudentCourse" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO students_courses (student_id, course, start_date, expected_completion_date)
    VALUES (#{studentId}, #{course}, #{startDate}, #{expectedCompletionDate})
  </insert>

  <!-- 受講生の更新 -->
  <update id="updateStudent" parameterType="raisetech.studentManagement.date.Student">
    UPDATE students
    SET full_name = #{fullName}, furigana = #{furigana}, nick_name = #{nickname}, email_address =
    #{emailAddress},
    area = #{area}, age = #{age}, sex = #{sex}, remark = #{remark}, is_deleted =#{isDeleted}
    WHERE id = #{id}
  </update>

  <!-- 受講生コース情報の更新 -->
  <update id="updateStudentCourse" parameterType="raisetech.studentManagement.date.StudentCourse">
    UPDATE students_courses SET course = #{course} WHERE id = #{id}
  </update>
</mapper>